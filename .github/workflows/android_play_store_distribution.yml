name: "[Release] Android - Google Play Store"

on:
  push:
    tags:
      - 'v*-release'

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# You need to uncomment [Setup - Flutter Actions with Cache] when you want to use 
# different runner then our internal M1 flutter-builds runner.
env:
  flutter_version: "3.27.1"
  java_version: "17"

jobs:
  play-store-alpha-distribution:
    name: Play Store production release

    runs-on: ubuntu-latest
    # runs-on: [self-hosted, macOS, flutter-builds]  # use this for self-hosted runners
    timeout-minutes: 15

    steps:
      - name: '[Setup - Checkout]'
        uses: actions/checkout@v4.2.1

      - name: '[Setup - Java]'
        uses: actions/setup-java@v4.4.0
        with:
          distribution: 'zulu'
          java-version: ${{ env.java_version }}

      - name: '[Setup - Flutter Actions with Cache]'
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter_version }}
          cache: true
          architecture: x64
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'

      # Make sure we have latest FVM
      - name: '[FVM - Install]'
        run: dart pub global activate fvm

      # Install correct fvm version
      - name: '[FVM - Install version]'
        run: fvm install ${{ env.flutter_version }}
        
      # Make gen
      - name: '[Flutter - Generate code]'
        run: make gen

      - name: '[Flutter - Build AppBundle]'
        run: fvm flutter build appbundle -t lib/main_production.dart --flavor production --obfuscate --split-debug-info=build/app/outputs/symbols

      # Build and upload to Play Store
      # The deployment implementation is inspired by this blog post:
      # https://medium.com/@josealfonsomora/publishing-android-apps-with-github-actions-3cb9a90396ca
      - name: '[Flutter - Upload to Play Store Alpha channel]'
        uses: r0adkll/upload-google-play@v1.1.1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_DISTRIBUTION_SERVICE_ACCOUNT_JSON }}
          packageName: com.strv.flutter.template
          releaseFiles: build/app/outputs/bundle/productionRelease/app-production-release.aab
          mappingFile: build/app/outputs/mapping/productionRelease/mapping.txt
          whatsNewDirectory: whatsnew
          changesNotSentForReview: true # Set this to FALSE in case of managed publishing turned off!
          track: alpha #https://github.com/r0adkll/upload-google-play#track
          #status: draft # Upload it as draft release if you want to manually publish the release from GooglePlay console
          #userFraction: 0.1 # Rollout of the release <0;1>

      # TODO: Add correct AppId from the Firebase Project
      - name: '[Flutter - Upload Crashlytics Mapping Files]'
        run: firebase crashlytics:symbols:upload --app=XXX build/app/outputs/symbols
      
      # Only on self hosted. Cleanup the files after the build
      # - name: '[Finish - Cleanup]'
      #   run: |
      #     rm -rf ./* || true
      #     rm -rf ./.??* || true